declare_war_on_all_allies = {
	if = { #Make sure we dont declare war on UK a second time
		limit = { NOT = { has_war_with = ENG } }
		declare_war_on = { target = ENG type = annex_everything }
		ROOT_call_allies_both_sides = yes
	}
}

ROOT_call_allies_both_sides = {
	ROOT_call_all_allies_against_ENG = yes
	ENG_call_all_allies_against_ROOT = yes
}
ROOT_call_all_allies_against_ENG = {
	for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = ENG
			}
		}

	}
}
ENG_call_all_allies_against_ROOT = {
	for_each_scope_loop = {
	    array = ENG.allies
		if = {
			add_to_war = {
				targeted_alliance = ENG
				enemy = ROOT
			}
		}
	}
} 
ROOT_call_against_norway = {
	for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = {
				NOT = { 
					OR = { 
						original_tag = ITA  
						original_tag = ETH
					} 
				} 
			} 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = NOR
			}
		}

	}
} 
ROOT_call_against_denmark = {
	for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = DEN
			}
		}

	}
} 
ROOT_call_against_beligum = {
		for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = BEL
			}
		}

	}
} 
ROOT_call_against_holland = {
		for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = HOL
			}
		}

	}
							
}
ROOT_call_against_france = {
		for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = FRA
			}
		}

	}
							
}	
air_to_germany = {
	if = { limit = { tag = ITA }
	send_equipment = { equipment = fighter_equipment amount = 10000 target = GER }
	send_equipment = { equipment = CAS_equipment amount = 10000 target = GER }
	send_equipment = { equipment = tac_bomber_equipment amount = 10000 target = GER }
	send_equipment = { equipment = heavy_fighter_equipment amount = 10000 target = GER }	
	send_equipment = { equipment = strat_bomber_equipment amount = 10000 target = GER }	
	}
}

air_to_hungary = {
	if = { limit = { tag = ITA }
	send_equipment = { equipment = fighter_equipment amount = 10000 target = HUN }
	send_equipment = { equipment = CAS_equipment amount = 10000 target = HUN }
	send_equipment = { equipment = tac_bomber_equipment amount = 10000 target = HUN }
	send_equipment = { equipment = heavy_fighter_equipment amount = 10000 target = HUN }	
	send_equipment = { equipment = strat_bomber_equipment amount = 10000 target = HUN }	
	}
}



tp_divs_out_of_france = {  every_country = { limit ={ is_in_faction_with = ENG }  every_state = { limit = { OR = { is_core_of = FRA  }}  teleport_armies = { to_state = 5139 }   } }  }

HFU_fuel_startup_effect = { 
	every_country={
		limit={	has_country_flag=fuel_system_enabled}
				add_to_array={GLOBAL.fuel_system_manager=THIS.id}
	}
	GER = {
		every_country = {
			limit = {
				NOT={tag=GER}
				OR = { is_in_faction_with = GER  tag = EFR    }
				
				NOT = { is_in_array = { GER.faction_members_array = THIS.id } }			
			}
			add_to_array = { GER.faction_members_array = THIS.id }
		}
		if = {
			limit = {
				any_of_scopes={array=GER.faction_members_array NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
			}
			for_each_scope_loop={
				array=GER.faction_members_array
				if={limit={NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
				add_to_array={GLOBAL.fuel_countries=THIS.id}}
			}
		}
		set_variable={send_fuel_enabled=2}
		for_each_scope_loop={
			array=GER.faction_members_array
					set_variable={send_fuel_enabled=2}
		}
	}
	ENG = {
		every_country = {
			limit = {
				OR = {
					AND = { 
						NOT={tag=ENG}
						
						is_in_faction_with = ENG  
						NOT = { is_in_array = { ENG.faction_members_array = THIS.id } }	
					}
					tag = USA
				}
			}
			add_to_array = { ENG.faction_members_array = THIS.id }
		}
		if = {
			limit = {
				any_of_scopes={array=ENG.faction_members_array NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
			}
			for_each_scope_loop={
				array=ENG.faction_members_array
				if={limit={NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
				add_to_array={GLOBAL.fuel_countries=THIS.id}}
			}
		}
		set_variable={send_fuel_enabled=2}
		for_each_scope_loop={
			array=ENG.faction_members_array
			set_variable={send_fuel_enabled=2}
		}
	}
}
HFU_fuel_on_daily_scripted_effect = {
	if={
		limit={tag=SWE}
		for_each_scope_loop={
			array=GLOBAL.fuel_system_manager
			set_variable={GLOBAL.controllerscope=THIS.id}
			for_each_scope_loop={
				array = THIS.faction_members_array
				##
				set_variable={GLOBAL.currentscope=THIS.id}
				##
				if={
					limit={check_variable={send_fuel_enabled >1}}
					set_variable={fuelbedarf=min_fuel}
					subtract_from_variable={fuelbedarf=fuel_ratio}
					set_variable={fuelbedarfanteil=fuelbedarf}
					multiply_variable={fuelbedarf=max_fuel_k}
					set_variable={fuelbedarfvorzeichen=fuelbedarf}
					multiply_variable={fuelbedarfvorzeichen=-1}
					##
					set_variable={fuelbedarf_k=fuelbedarf}
					set_variable={fuelbedarfvorzeichen_k=fuelbedarfvorzeichen}
					##
					multiply_variable={fuelbedarfvorzeichen=1000}
					multiply_variable={fuelbedarf=1000}
	
					set_variable={PREV.fuelbedarf=PREV.min_fuel}
					subtract_from_variable={PREV.fuelbedarf=PREV.fuel_ratio}
					set_variable={PREV.fuelbedarfanteil=PREV.fuelbedarf}
					multiply_variable={PREV.fuelbedarf=PREV.max_fuel_k}
					set_variable={PREV.fuelbedarfvorzeichen=PREV.fuelbedarf}
					multiply_variable={PREV.fuelbedarfvorzeichen=-1}
					multiply_variable={PREV.fuelbedarfvorzeichen=1000}
					multiply_variable={PREV.fuelbedarf=1000}
					set_variable={PREV.free_stockpile=PREV.max_fuel_k}
					subtract_from_variable={PREV.free_stockpile=PREV.fuel_k}
					multiply_variable={PREV.free_stockpile=1000}
					set_variable={PREV.free_stockpilenegativ=PREV.free_stockpile}
					multiply_variable={PREV.free_stockpilenegativ=-1}

					set_variable={countryfuelplus5=fuel_ratio}
					add_to_variable={countryfuelplus5=0.05}
					if={
						limit={ #fuel von prev zu this
							check_variable={PREV.fuelbedarf <0} #hat prev mehr fuel als minimum?
							check_variable={min_fuel > countryfuelplus5} 
						}
						if={
							limit={
								check_variable={fuelbedarf >0}
								check_variable={PREV.fuelbedarfvorzeichen >fuelbedarf}
							}
							set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
							set_temp_variable={subjectgain=fuelbedarf}
							PREV={ add_fuel=mastergain	}
							add_fuel=subjectgain
						}
						else={
		
							set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
							set_temp_variable={subjectgain=fuelbedarf}
							PREV={	add_fuel=mastergain	}
							add_fuel=subjectgain
							set_temp_variable={PREV.test2=PREV.fuelbedarfvorzeichen}
						}
					}
					else_if={ #fuel von this zu prev
						limit={
							check_variable={fuelbedarf <0} #hat this mehr fuel als minimum?
							check_variable={PREV.fuel_ratio <0.95} # hat PREV full_stockpile?
						}
						if={
							limit={
								check_variable={fuelbedarfvorzeichen <PREV.free_stockpile} # ist this free fuel kleiner als prev free stockpile?
							}
							set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
							set_temp_variable={subjectgain=fuelbedarf}
							PREV={	add_fuel=mastergain	}
							add_fuel=subjectgain
						}
						else_if={
							limit={check_variable={PREV.free_stockpile>1000}}#no need to transfer fuel <1k

							set_temp_variable={PREV.mastergain=PREV.free_stockpile}
							set_temp_variable={subjectgain=PREV.free_stockpilenegativ}
							PREV={	add_fuel=mastergain	}
							add_fuel=subjectgain
						}
					}
					else_if={#this fills the subject fuel storage to 95% when major has full fuel
						limit={
							check_variable={fuel_ratio <0.95} #hat this free stockpile
							check_variable={PREV.fuel_ratio >0.95} # hat PREV full_stockpile?
						}
						set_variable={free_stockpile=max_fuel_k}
						subtract_from_variable={free_stockpile=fuel_k}
						multiply_variable={free_stockpile=1000}
						set_variable={free_stockpilenegativ=free_stockpile}
						multiply_variable={free_stockpilenegativ=-1}
						set_variable={master_spare_fuel=PREV.max_fuel_k}
						multiply_variable={master_spare_fuel=0.03}
						multiply_variable={master_spare_fuel=1000}
						set_variable={master_spare_fuelnegativ=master_spare_fuel}
						multiply_variable={master_spare_fuelnegativ=-1}
						if={limit={check_variable={free_stockpile<mastersparefuel}}
							set_temp_variable={PREV.mastergain=free_stockpilenegativ}
							set_temp_variable={subjectgain=free_stockpile}}
						else={
							set_temp_variable={PREV.mastergain=master_spare_fuelnegativ}
							set_temp_variable={subjectgain=master_spare_fuel}
						}
						PREV={	add_fuel=mastergain	}
						add_fuel=subjectgain			
					}
				}
			}
		}
	}
	for_each_scope_loop={
	array=GLOBAL.fuel_countries
		set_temp_variable={currentfuel=fuel_ratio}
		subtract_from_temp_variable={currentfuel=1}
		multiply_temp_variable={currentfuel = 88}
		set_variable={fuel_bar_fuel=currentfuel}
	}
}

fuel_system_refresh_list = {
			if = {
							limit = {
								any_country = {
									OR={AND={NOT={tag=ROOT}
									is_in_faction_with = ROOT 
									NOT = { is_in_array = { ROOT.faction_members_array = THIS.id } }
								}
								any_of_scopes={array=ROOT.faction_members_array exists=no}
								}
								}
								
							}
							clear_array=ROOT.faction_members_array
							every_country = {
								limit = {
									NOT={tag=ROOT}
									OR={is_in_faction_with = ROOT
									AND={ROOT={tag=ENG}tag=USA}} 
									NOT = { is_in_array = { ROOT.faction_members_array = THIS.id } }
									
								}
								add_to_array = { ROOT.faction_members_array = THIS.id }
							}
							#if = { limit = { TAG = ENG } add_to_array = { ROOT.faction_members_array = USA.id } }
						}
			if = {
							limit = {
								any_of_scopes={array=ROOT.faction_members_array NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}
								}
							}
							for_each_scope_loop={
								array=ROOT.faction_members_array
								if={limit={NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
								add_to_array={GLOBAL.fuel_countries=THIS.id}}
								}
				}
}

JFU_vichy_france = { 

	GER = { 
	diplomatic_relation = {   country = EFR    relation = non_aggression_pact   active = yes }

	transfer_state = 28
	transfer_state = 17
	transfer_state = 27
	transfer_state = 18
	transfer_state = 24
	transfer_state = 16
	transfer_state = 15
	transfer_state = 30
	transfer_state = 23
	transfer_state = 14
	transfer_state = 19
	transfer_state = 29
	transfer_state = 806
	transfer_state = 785

		every_state = {
			limit = {
				AND = {
					is_core_of = FRA
					is_controlled_by = GER
				}
			}
				
			add_compliance = 60
		}
	}

	FRA = {
	remove_ideas = FRA_protected_by_the_maginot_line
	remove_ideas = FRA_victors_of_wwi
	remove_ideas = FRA_full_employment
	remove_ideas = FRA_disjointed_government
	remove_ideas = FRA_political_violence
			create_country_leader = {
				name = "Charles de Gaulle"
				desc = "POLITICS_CHARLES_DE_GAULLE_DESC"
				picture = "Portrait_France_Charles_De_Gaulle.dds"
				expire = "1965.1.1"
				ideology = conservatism
				traits = {
				}
			}
	}
	JFU_vichy_france_2 = yes
			
}


JFU_vichy_france_2 = {
	ITA = {   transfer_state = 735 transfer_state = 665 transfer_state = 458 transfer_state = 1 } #Italian claims, includes territory from Tunisia+Corsica+South Eastern France that was occupied in 1942
	539 = { set_building_level = { type = infrastructure level = 5 }}
	EFR ={ 
		set_country_flag = vichy_france_established
		###SOUTHERN FRANCE###
		transfer_state = 26
		add_state_core = 26
		set_capital = { state = 26 } 
		transfer_state = 33 
		add_state_core = 33 
		transfer_state = 20
		add_state_core = 20 
		transfer_state = 25
		add_state_core = 25 
		transfer_state = 31 
		add_state_core = 31 
		transfer_state = 22 
		add_state_core = 22 
		transfer_state = 32 
		add_state_core = 32 
		transfer_state = 21
		add_state_core = 21 
		###NORTH AFRICA### #demilitarized so Vichy players aren't utter cancer
		transfer_state = 460
		460 = { set_demilitarized_zone = yes }
		transfer_state = 513
		513 = { set_demilitarized_zone = yes }
		transfer_state = 462
		462 = { set_demilitarized_zone = yes }
		transfer_state = 459
		459 = { set_demilitarized_zone = yes }
		transfer_state = 461
		461 = { set_demilitarized_zone = yes }

			if = { 
				limit = { FRA = { check_variable = { FRA_legitimacy 	< 100 } }  }
				transfer_state = 554
				transfer_state = 680
				transfer_state = 677
				transfer_state = 799
				transfer_state = 553
			}

			if = { 
				limit = { FRA = { check_variable = { FRA_legitimacy 	< 80 } }  }
				transfer_state = 543
				transfer_state = 706
				transfer_state = 708
				transfer_state = 713
			}

			if = { 
				limit = { FRA = { check_variable = { FRA_legitimacy 	< 60 } }  }
				transfer_state = 557
				transfer_state = 272
				transfer_state = 780
				transfer_state = 556
				transfer_state = 779
				transfer_state = 778
				transfer_state = 777
				transfer_state = 776
				transfer_state = 781
				transfer_state = 782
				transfer_state = 786
				transfer_state = 515
				transfer_state = 775
				transfer_state = 298
				transfer_state = 514
			}
			#if = { 
			#	limit = { FRA = { check_variable = { FRA_legitimacy 	< 40 } }  }
			#	transfer_state = 774
			#	transfer_state = 773
			#	transfer_state = 660
				
			#}
			#if = { 
			#	limit = { FRA = { check_variable = { FRA_legitimacy 	< 20 } }  }
			#	transfer_state = 772				
			#}
	}
	FRA = {
		if = { 
			limit = { FRA = { check_variable = { FRA_legitimacy 	> 40 } }  }
			transfer_state = 295
			transfer_state = 538
			transfer_state = 718
			transfer_state = 768
			transfer_state = 769
		}
	}

}




JFU_startup_on_action = {
	if = {	limit = { has_game_rule = { rule = horst_manchukuo	option = HORST_ENABLE_MOD_MANCHUKUO	} }	MAN = { load_focus_tree = manchukuomod_focus } 	}
}
JFU_pre_grinded_generals_OFF = {
	GER = { 
		recruit_character = GER_erwin_rommel
		recruit_character = GER_fedor_von_bock
		recruit_character = GER_erich_von_manstein
		recruit_character = GER_erwin_von_witzleben
		recruit_character = GER_gerd_von_rundstedt
	}
	SOV = {
		recruit_character = SOV_nikolay_vatutin
		recruit_character = SOV_georgy_zhukov
		recruit_character = SOV_vasily_chuykov
		recruit_character = SOV_andrey_grechko
		recruit_character = SOV_dmitry_lelyushenko
		SOV_georgy_zhukov = { 
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_vasily_chuykov = {
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_dmitry_lelyushenko = {
			set_character_flag = SOV_safe_from_purge_flag
		}	
		SOV_andrey_grechko = {
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_nikolay_vatutin = {
			set_character_flag = SOV_safe_from_purge_flag
		}				
	}
	ROM = {
		recruit_character = ROM_gheorghe_avramescu
		recruit_character = ROM_ioan_mihail_racovita
		recruit_character = ROM_petre_dumitrescu
	}
	HUN = {
		recruit_character = HUN_geza_lakatos
		recruit_character = HUN_ivan_hindy
		recruit_character = HUN_karoly_beregfy
		recruit_character = HUN_lajos_veress
	}
	SPR = {
		recruit_character = SPR_antonio_cordon_garcia
		recruit_character = SPR_mohamed_meziane
		recruit_character = SPR_gonzalo_queipo_de_llano
	}
	ITA = {
		recruit_character = ITA_emilio_de_bono
		recruit_character = ITA_ugo_cavallero
		recruit_character = ITA_giovanni_messe
		recruit_character = ITA_ubaldo_soddu
		recruit_character = ITA_rodolfo_graziani
	}
	BUL = {
		recruit_character = BUL_ivan_markov
		recruit_character = BUL_georgi_markov
	}
	JAP = {
		recruit_character = JAP_shizuichi_tanaka
		recruit_character = JAP_akira_muto
		recruit_character = JAP_shunroku_hata
		recruit_character = JAP_hisaichi_terauchi
		recruit_character = JAP_tomoyuki_yamashita
		recruit_character = JAP_kenkichi_ueda
	}
	FRA = {
		recruit_character = FRA_charles_huntziger
		recruit_character = FRA_maxime_weygand
		recruit_character = FRA_alphonse_juin
	}
	ENG = {
		recruit_character = ENG_bernard_montgomery
		recruit_character = ENG_claude_auchinleck
		recruit_character = ENG_alan_cunningham
		recruit_character = ENG_william_slim
	}
	AST = {
		recruit_character = AST_leslie_morshead
		recruit_character = AST_thomas_blamey
		recruit_character = AST_henry_wynter
		recruit_character = AST_alan_vasey
	}
	BRA = {
		recruit_character = BRA_eurico_gaspar_dutra
		recruit_character = BRA_mascarenhas_de_morais
	}
	CAN = {
		recruit_character = CAN_thomas_victor_anderson
		recruit_character = CAN_charles_foulkes
	}
	MEX = {
		recruit_character = MEX_gildardo_magana
		recruit_character = MEX_heliodoro_charis
	}
	NZL = {
		recruit_character = NZL_robert_row
		recruit_character = NZL_william_stevens
	}
	RAJ = {
		recruit_character = RAJ_frank_messervy
		recruit_character = RAJ_douglas_gracey
	}
	SAF = {
		recruit_character = SAF_george_edwin_brink
		recruit_character = SAF_guy_hallifax
	}
	USA = {
		recruit_character = USA_omar_bradley
		recruit_character = USA_dwight_d_eisenhower
		recruit_character = USA_geoffrey_keyes
		recruit_character = USA_lucian_truscott
		recruit_character = USA_george_s_patton
	}
}	
JFU_pre_grinded_generals_ON = {
	GER = { 
		recruit_character = GER_erwin_rommel_grinded 
		recruit_character = GER_fedor_von_bock_grinded
		recruit_character = GER_erich_von_manstein_grinded
		recruit_character = GER_erwin_von_witzleben_grinded
		recruit_character = GER_gerd_von_rundstedt_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	SOV = {
		recruit_character = SOV_nikolay_vatutin_grinded
		recruit_character = SOV_georgy_zhukov_grinded
		recruit_character = SOV_vasily_chuykov_grinded
		recruit_character = SOV_andrey_grechko_grinded
		recruit_character = SOV_dmitry_lelyushenko_grinded
		SOV_georgy_zhukov_grinded = { 
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_vasily_chuykov_grinded = {
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_dmitry_lelyushenko_grinded = {
			set_character_flag = SOV_safe_from_purge_flag
		}	
		SOV_andrey_grechko_grinded = {
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_nikolay_vatutin_grinded = {
			set_character_flag = SOV_safe_from_purge_flag
		}	
		add_ideas = { pre_grinded_gens_volunteers }
	}
	ROM = {
		recruit_character = ROM_gheorghe_avramescu_grinded
		recruit_character = ROM_ioan_mihail_racovita_grinded
		recruit_character = ROM_petre_dumitrescu_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	HUN = {
		recruit_character = HUN_geza_lakatos_grinded
		recruit_character = HUN_ivan_hindy_grinded
		recruit_character = HUN_karoly_beregfy_grinded
		recruit_character = HUN_lajos_veress_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	SPR = {
		recruit_character = SPR_antonio_cordon_garcia_grinded
		recruit_character = SPA_francisco_franco_grinded
		recruit_character = SPR_mohamed_meziane_grinded
		recruit_character = SPR_gonzalo_queipo_de_llano_grinded
		add_ideas = { scw_pre_grinded_nerf }
	}
	ITA = {
		recruit_character = ITA_emilio_de_bono_grinded
		recruit_character = ITA_ugo_cavallero_grinded
		recruit_character = ITA_giovanni_messe_grinded
		recruit_character = ITA_ubaldo_soddu_grinded
		recruit_character = ITA_rodolfo_graziani_grinded
		add_ideas = { pre_grinded_gens_volunteers }
		ETH = {
			transfer_state = 271
			transfer_state = 550
			transfer_state = 559

			271 = { add_core_of = ETH }
			550 = { add_core_of = ETH }
			559 = { add_core_of = ETH }
				
			inherit_technology = ITA	
			}
			
		ITA = { 
			puppet = ETH
			air_experience = 80
			army_experience = 100
		}
	}
	BUL = {
		recruit_character = BUL_ivan_markov_grinded
		recruit_character = BUL_georgi_markov_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	JAP = {
		recruit_character = JAP_shizuichi_tanaka_grinded
		recruit_character = JAP_akira_muto_grinded
		recruit_character = JAP_shunroku_hata_grinded
		recruit_character = JAP_hisaichi_terauchi_grinded
		recruit_character = JAP_tomoyuki_yamashita_grinded
		recruit_character = JAP_kenkichi_ueda_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	FRA = {
		recruit_character = FRA_charles_huntziger_grinded
		recruit_character = FRA_charles_de_gaulle_grinded
		recruit_character = FRA_maxime_weygand_grinded
		recruit_character = FRA_alphonse_juin_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	ENG = {
		recruit_character = ENG_bernard_montgomery_grinded
		recruit_character = ENG_claude_auchinleck_grinded
		recruit_character = ENG_alan_cunningham_grinded
		recruit_character = ENG_william_slim_grinded
	}
	AST = {
		recruit_character = AST_leslie_morshead_grinded
		recruit_character = AST_thomas_blamey_grinded
		recruit_character = AST_henry_wynter_grinded
		recruit_character = AST_alan_vasey_grinded
	}
	BRA = {
		recruit_character = BRA_eurico_gaspar_dutra_grinded
		recruit_character = BRA_mascarenhas_de_morais_grinded
	}
	CAN = {
		recruit_character = CAN_thomas_victor_anderson_grinded
		recruit_character = CAN_charles_foulkes_grinded
	}
	MEX = {
		recruit_character = MEX_gildardo_magana_grinded
		recruit_character = MEX_heliodoro_charis_grinded
	}
	NZL = {
		recruit_character = NZL_robert_row_grinded
		recruit_character = NZL_william_stevens_grinded
	}
	RAJ = {
		recruit_character = RAJ_frank_messervy_grinded
		recruit_character = RAJ_douglas_gracey_grinded
	}
	SAF = {
		recruit_character = SAF_george_edwin_brink_grinded
		recruit_character = SAF_guy_hallifax_grinded
	}
	USA = {
		recruit_character = USA_omar_bradley_grinded
		recruit_character = USA_dwight_d_eisenhower_grinded
		recruit_character = USA_geoffrey_keyes_grinded
		recruit_character = USA_lucian_truscott_grinded
		recruit_character = USA_george_s_patton_grinded
	}
}
JFU_alternative_gs = {
	64 = {
		add_extra_state_shared_building_slots = 5
		add_building_construction = {
			type = industrial_complex
			level = 5
			instant_build = yes
		}
	}
	282 = {
		add_extra_state_shared_building_slots = 5
		add_building_construction = {
			type = industrial_complex
			level = 5
			instant_build = yes
		}
	}
}
HMP_anti_building_exploit_effect = { #add to horst tool
	every_state = { limit = { ignore_aa_states = yes non_damaged_building_level  = { building = anti_air_building  level > 5 } } remove_building  = {  type = anti_air_building  level = 1 }  }  
	every_state = { limit = {  non_damaged_building_level  = { building = infrastructure  level > 5 } } remove_building  = {  type = infrastructure  level = 1 }  }  
}				