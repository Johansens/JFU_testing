declare_war_on_all_allies = {
	if = { #Make sure we dont declare war on UK a second time
		limit = { NOT = { has_war_with = ENG } }
		declare_war_on = { target = ENG type = annex_everything }
		ROOT_call_allies_both_sides = yes
	}
}

ROOT_call_allies_both_sides = {
	ROOT_call_all_allies_against_ENG = yes
	ENG_call_all_allies_against_ROOT = yes
}
ROOT_call_all_allies_against_ENG = {
	for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = ENG
			}
		}

	}
}
ENG_call_all_allies_against_ROOT = {
	for_each_scope_loop = {
	    array = ENG.allies
		if = {
			add_to_war = {
				targeted_alliance = ENG
				enemy = ROOT
			}
		}
	}
} 
ROOT_call_against_norway = {
	for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = {
				NOT = { 
					OR = { 
						original_tag = ITA  
						original_tag = ETH
					} 
				} 
			} 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = NOR
			}
		}

	}
} 
ROOT_call_against_denmark = {
	for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = DEN
			}
		}

	}
} 
ROOT_call_against_beligum = {
		for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = BEL
			}
		}

	}
} 
ROOT_call_against_holland = {
		for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = HOL
			}
		}

	}
							
}
ROOT_call_against_france = {
		for_each_scope_loop = {
		array = ROOT.allies
		if = {
			limit = { NOT = { OR = { original_tag = ITA original_tag = ETH } } } 
			add_to_war = {
				targeted_alliance = ROOT
				enemy = FRA
			}
		}
	}						
}	
ROOT_call_against_greece = {
		for_each_scope_loop = {
		array = ROOT.allies
		add_to_war = {
			targeted_alliance = ROOT
			enemy = GRE
		}
	}		
}
air_to_germany = {
	if = { limit = { tag = ITA }
		send_equipment = { equipment = small_plane_airframe amount = 10000 target = GER }
		send_equipment = { equipment = small_plane_cas_airframe amount = 10000 target = GER }
		send_equipment = { equipment = medium_plane_airframe amount = 10000 target = GER }
		send_equipment = { equipment = medium_plane_fighter_airframe amount = 10000 target = GER }	
		send_equipment = { equipment = large_plane_airframe amount = 10000 target = GER }	
	}
}

air_to_hungary = {
	if = { limit = { tag = ITA }
		send_equipment = { equipment = small_plane_airframe amount = 10000 target = HUN }
		send_equipment = { equipment = small_plane_cas_airframe amount = 10000 target = HUN }
		send_equipment = { equipment = medium_plane_airframe amount = 10000 target = HUN }
		send_equipment = { equipment = medium_plane_fighter_airframe amount = 10000 target = HUN }	
		send_equipment = { equipment = large_plane_airframe amount = 10000 target = HUN }	
	}
}



tp_divs_out_of_france = {  every_country = { limit ={ is_in_faction_with = ENG }  every_state = { limit = { OR = { is_core_of = FRA  }}  teleport_armies = { to_state = 5139 }   } }  }

HFU_fuel_startup_effect = { 
	every_country={
		limit={	has_country_flag=fuel_system_enabled}
				add_to_array={GLOBAL.fuel_system_manager=THIS.id}
	}
	GER = {
		every_country = {
			limit = {
				NOT={tag=GER}
				OR = { is_in_faction_with = GER  tag = EFR    }
				
				NOT = { is_in_array = { GER.faction_members_array = THIS.id } }			
			}
			add_to_array = { GER.faction_members_array = THIS.id }
		}
		if = {
			limit = {
				any_of_scopes={array=GER.faction_members_array NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
			}
			for_each_scope_loop={
				array=GER.faction_members_array
				if={limit={NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
				add_to_array={GLOBAL.fuel_countries=THIS.id}}
			}
		}
		set_variable={send_fuel_enabled=2}
		for_each_scope_loop={
			array=GER.faction_members_array
					set_variable={send_fuel_enabled=2}
		}
	}
	ENG = {
		every_country = {
			limit = {
				OR = {
					AND = { 
						NOT={tag=ENG}
						
						is_in_faction_with = ENG  
						NOT = { is_in_array = { ENG.faction_members_array = THIS.id } }	
					}
					tag = USA
				}
			}
			add_to_array = { ENG.faction_members_array = THIS.id }
		}
		if = {
			limit = {
				any_of_scopes={array=ENG.faction_members_array NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
			}
			for_each_scope_loop={
				array=ENG.faction_members_array
				if={limit={NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
				add_to_array={GLOBAL.fuel_countries=THIS.id}}
			}
		}
		set_variable={send_fuel_enabled=2}
		for_each_scope_loop={
			array=ENG.faction_members_array
			set_variable={send_fuel_enabled=2}
		}
	}
}
HFU_fuel_on_daily_scripted_effect = {
	if={
		limit={tag=SWE}
		for_each_scope_loop={
			array=GLOBAL.fuel_system_manager
			set_variable={GLOBAL.controllerscope=THIS.id}
			for_each_scope_loop={
				array = THIS.faction_members_array
				##
				set_variable={GLOBAL.currentscope=THIS.id}
				##
				if={
					limit={check_variable={send_fuel_enabled >1}}
					set_variable={fuelbedarf=min_fuel}
					subtract_from_variable={fuelbedarf=fuel_ratio}
					set_variable={fuelbedarfanteil=fuelbedarf}
					multiply_variable={fuelbedarf=max_fuel_k}
					set_variable={fuelbedarfvorzeichen=fuelbedarf}
					multiply_variable={fuelbedarfvorzeichen=-1}
					##
					set_variable={fuelbedarf_k=fuelbedarf}
					set_variable={fuelbedarfvorzeichen_k=fuelbedarfvorzeichen}
					##
					multiply_variable={fuelbedarfvorzeichen=1000}
					multiply_variable={fuelbedarf=1000}
	
					set_variable={PREV.fuelbedarf=PREV.min_fuel}
					subtract_from_variable={PREV.fuelbedarf=PREV.fuel_ratio}
					set_variable={PREV.fuelbedarfanteil=PREV.fuelbedarf}
					multiply_variable={PREV.fuelbedarf=PREV.max_fuel_k}
					set_variable={PREV.fuelbedarfvorzeichen=PREV.fuelbedarf}
					multiply_variable={PREV.fuelbedarfvorzeichen=-1}
					multiply_variable={PREV.fuelbedarfvorzeichen=1000}
					multiply_variable={PREV.fuelbedarf=1000}
					set_variable={PREV.free_stockpile=PREV.max_fuel_k}
					subtract_from_variable={PREV.free_stockpile=PREV.fuel_k}
					multiply_variable={PREV.free_stockpile=1000}
					set_variable={PREV.free_stockpilenegativ=PREV.free_stockpile}
					multiply_variable={PREV.free_stockpilenegativ=-1}

					set_variable={countryfuelplus5=fuel_ratio}
					add_to_variable={countryfuelplus5=0.05}
					if={
						limit={ #fuel von prev zu this
							check_variable={PREV.fuelbedarf <0} #hat prev mehr fuel als minimum?
							check_variable={min_fuel > countryfuelplus5} 
						}
						if={
							limit={
								check_variable={fuelbedarf >0}
								check_variable={PREV.fuelbedarfvorzeichen >fuelbedarf}
							}
							set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
							set_temp_variable={subjectgain=fuelbedarf}
							PREV={ add_fuel=mastergain	}
							add_fuel=subjectgain
						}
						else={
		
							set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
							set_temp_variable={subjectgain=fuelbedarf}
							PREV={	add_fuel=mastergain	}
							add_fuel=subjectgain
							set_temp_variable={PREV.test2=PREV.fuelbedarfvorzeichen}
						}
					}
					else_if={ #fuel von this zu prev
						limit={
							check_variable={fuelbedarf <0} #hat this mehr fuel als minimum?
							check_variable={PREV.fuel_ratio <0.95} # hat PREV full_stockpile?
						}
						if={
							limit={
								check_variable={fuelbedarfvorzeichen <PREV.free_stockpile} # ist this free fuel kleiner als prev free stockpile?
							}
							set_temp_variable={PREV.mastergain=fuelbedarfvorzeichen}
							set_temp_variable={subjectgain=fuelbedarf}
							PREV={	add_fuel=mastergain	}
							add_fuel=subjectgain
						}
						else_if={
							limit={check_variable={PREV.free_stockpile>1000}}#no need to transfer fuel <1k

							set_temp_variable={PREV.mastergain=PREV.free_stockpile}
							set_temp_variable={subjectgain=PREV.free_stockpilenegativ}
							PREV={	add_fuel=mastergain	}
							add_fuel=subjectgain
						}
					}
					else_if={#this fills the subject fuel storage to 95% when major has full fuel
						limit={
							check_variable={fuel_ratio <0.95} #hat this free stockpile
							check_variable={PREV.fuel_ratio >0.95} # hat PREV full_stockpile?
						}
						set_variable={free_stockpile=max_fuel_k}
						subtract_from_variable={free_stockpile=fuel_k}
						multiply_variable={free_stockpile=1000}
						set_variable={free_stockpilenegativ=free_stockpile}
						multiply_variable={free_stockpilenegativ=-1}
						set_variable={master_spare_fuel=PREV.max_fuel_k}
						multiply_variable={master_spare_fuel=0.03}
						multiply_variable={master_spare_fuel=1000}
						set_variable={master_spare_fuelnegativ=master_spare_fuel}
						multiply_variable={master_spare_fuelnegativ=-1}
						if={limit={check_variable={free_stockpile<mastersparefuel}}
							set_temp_variable={PREV.mastergain=free_stockpilenegativ}
							set_temp_variable={subjectgain=free_stockpile}}
						else={
							set_temp_variable={PREV.mastergain=master_spare_fuelnegativ}
							set_temp_variable={subjectgain=master_spare_fuel}
						}
						PREV={	add_fuel=mastergain	}
						add_fuel=subjectgain			
					}
				}
			}
		}
	}
	for_each_scope_loop={
	array=GLOBAL.fuel_countries
		set_temp_variable={currentfuel=fuel_ratio}
		subtract_from_temp_variable={currentfuel=1}
		multiply_temp_variable={currentfuel = 88}
		set_variable={fuel_bar_fuel=currentfuel}
	}
}

fuel_system_refresh_list = {
			if = {
							limit = {
								any_country = {
									OR={AND={NOT={tag=ROOT}
									is_in_faction_with = ROOT 
									NOT = { is_in_array = { ROOT.faction_members_array = THIS.id } }
								}
								any_of_scopes={array=ROOT.faction_members_array exists=no}
								}
								}
								
							}
							clear_array=ROOT.faction_members_array
							every_country = {
								limit = {
									NOT={tag=ROOT}
									OR={is_in_faction_with = ROOT
									AND={ROOT={tag=ENG}tag=USA}} 
									NOT = { is_in_array = { ROOT.faction_members_array = THIS.id } }
									
								}
								add_to_array = { ROOT.faction_members_array = THIS.id }
							}
							#if = { limit = { TAG = ENG } add_to_array = { ROOT.faction_members_array = USA.id } }
						}
			if = {
							limit = {
								any_of_scopes={array=ROOT.faction_members_array NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}
								}
							}
							for_each_scope_loop={
								array=ROOT.faction_members_array
								if={limit={NOT={is_in_array={GLOBAL.fuel_countries=THIS.id}}}
								add_to_array={GLOBAL.fuel_countries=THIS.id}}
								}
				}
}

JFU_vichy_france = { 

	GER = { 
	diplomatic_relation = {   country = EFR    relation = non_aggression_pact   active = yes }

	transfer_state = 28
	transfer_state = 17
	transfer_state = 27
	transfer_state = 18
	transfer_state = 24
	transfer_state = 16
	transfer_state = 15
	transfer_state = 30
	transfer_state = 23
	transfer_state = 14
	transfer_state = 19
	transfer_state = 29
	transfer_state = 806
	transfer_state = 785

		every_state = {
			limit = {
				AND = {
					is_core_of = FRA
					is_controlled_by = GER
				}
			}
				
			add_compliance = 60
		}
	}
	ENG = { news_event = { id = news.44 } }
	GER = { country_event = { id = germany.107 } }
	FRA = {
	remove_ideas = FRA_protected_by_the_maginot_line
	remove_ideas = FRA_victors_of_wwi
	remove_ideas = FRA_full_employment
	remove_ideas = FRA_disjointed_government
	remove_ideas = FRA_political_violence
			create_country_leader = {
				name = "Charles de Gaulle"
				desc = "POLITICS_CHARLES_DE_GAULLE_DESC"
				picture = "Portrait_France_Charles_De_Gaulle.dds"
				expire = "1965.1.1"
				ideology = conservatism
				traits = {
				}
			}
	}
	JFU_vichy_france_2 = yes
			
}


JFU_vichy_france_2 = {
	ITA = {   transfer_state = 735 transfer_state = 665 transfer_state = 458 transfer_state = 1 } #Italian claims, includes territory from Tunisia+Corsica+South Eastern France that was occupied in 1942
	539 = { set_building_level = { type = infrastructure level = 5 }}
	EFR ={ 
		set_country_flag = vichy_france_established
		###SOUTHERN FRANCE###
		transfer_state = 26
		add_state_core = 26
		set_capital = { state = 26 } 
		transfer_state = 33 
		add_state_core = 33 
		transfer_state = 20
		add_state_core = 20 
		transfer_state = 25
		add_state_core = 25 
		transfer_state = 31 
		add_state_core = 31 
		transfer_state = 22 
		add_state_core = 22 
		transfer_state = 32 
		add_state_core = 32 
		transfer_state = 21
		add_state_core = 21 
		transfer_state = 851
		add_state_core = 851
		###NORTH AFRICA### #demilitarized so Vichy players aren't utter cancer
		transfer_state = 460
		460 = { set_demilitarized_zone = yes }
		transfer_state = 513
		513 = { set_demilitarized_zone = yes }
		transfer_state = 462
		462 = { set_demilitarized_zone = yes }
		transfer_state = 459
		459 = { set_demilitarized_zone = yes }
		transfer_state = 461
		461 = { set_demilitarized_zone = yes }

			if = { 
				limit = { FRA = { check_variable = { FRA_legitimacy 	< 100 } }  }
				transfer_state = 554
				transfer_state = 680
				transfer_state = 677
				transfer_state = 799
				transfer_state = 553
			}

			if = { 
				limit = { FRA = { check_variable = { FRA_legitimacy 	< 80 } }  }
				transfer_state = 543
				transfer_state = 706
				transfer_state = 708
				transfer_state = 713
			}

			if = { 
				limit = { FRA = { check_variable = { FRA_legitimacy 	< 60 } }  }
				transfer_state = 557
				transfer_state = 272
				transfer_state = 780
				transfer_state = 556
				transfer_state = 779
				transfer_state = 778
				transfer_state = 777
				transfer_state = 776
				transfer_state = 781
				transfer_state = 782
				transfer_state = 786
				transfer_state = 515
				transfer_state = 775
				transfer_state = 298
				transfer_state = 514
				transfer_state = 899
				transfer_state = 898
			}
			#if = { 
			#	limit = { FRA = { check_variable = { FRA_legitimacy 	< 40 } }  }
			#	transfer_state = 774
			#	transfer_state = 773
			#	transfer_state = 660
				
			#}
			#if = { 
			#	limit = { FRA = { check_variable = { FRA_legitimacy 	< 20 } }  }
			#	transfer_state = 772				
			#}
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 15000 }
	}
	FRA = {
		if = { 
			limit = { FRA = { check_variable = { FRA_legitimacy 	> 40 } }  }
			transfer_state = 295
			transfer_state = 538
			transfer_state = 718
			transfer_state = 768
			transfer_state = 769
			transfer_state = 890
			transfer_state = 889
			transfer_state = 888
		}
	}

}




JFU_startup_on_action = {
	if = {	limit = { has_game_rule = { rule = horst_manchukuo	option = HORST_ENABLE_MOD_MANCHUKUO	} }	MAN = { load_focus_tree = manchukuomod_focus } 	}
	ENG = {
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 12200 }
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 9600 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 259 }
		add_equipment_to_stockpile = { type = artillery_equipment_1 amount = 100 }
		add_equipment_to_stockpile = { type = light_tank_chassis_1 amount = 180 producer = ENG variant_name = "Light Tank Mk. VI" }
	}
	GER = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 24900 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 891 }
		add_equipment_to_stockpile = { type = motorized_equipment_1 amount = 607 }
		add_equipment_to_stockpile = { type = artillery_equipment_1 amount = 349 }
		add_equipment_to_stockpile = { type = light_tank_chassis_2 amount = 720 producer = GER variant_name = "Panzer II Ausf. A" }
	}
	FRA = {
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 14400 }
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 31300 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 766 }
		add_equipment_to_stockpile = { type = motorized_equipment_1 amount = 2500 }
		add_equipment_to_stockpile = { type = artillery_equipment_1 amount = 217 }
		add_equipment_to_stockpile = { type = light_tank_chassis_0 amount = 480 producer = FRA variant_name = "FT mod. 31" }
		add_equipment_to_stockpile = { type = light_tank_chassis_0 amount = 240 producer = FRA variant_name = "FT Char Cannon" }
		add_equipment_to_stockpile = { type = light_tank_chassis_1 amount = 480 producer = FRA variant_name = "H-35" }
	}
	JAP = {
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 7700 }
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 31700 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 801 }
		add_equipment_to_stockpile = { type = motorized_equipment_1 amount = 880 }
		add_equipment_to_stockpile = { type = artillery_equipment_1 amount = 25 }
		add_equipment_to_stockpile = { type = light_tank_chassis_1 amount = 180 producer = JAP variant_name = "Type 95 Ha-Go" }		
	}
	USA = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 11100 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 344 }
		add_equipment_to_stockpile = { type = artillery_equipment_1 amount = 106 }
	}
	HUN = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 4700 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 11 }
	}
	ROM = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 9600 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 303 }
		add_equipment_to_stockpile = { type = motorized_equipment_1 amount = 70 }
		add_equipment_to_stockpile = { type = artillery_equipment_1 amount = 87 }
		add_equipment_to_stockpile = { type = light_tank_chassis_0 amount = 72 producer = ROM variant_name = "FT Char Cannon" }
	}
	SOV = {
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 16200 }
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 61700 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 443 }
		add_equipment_to_stockpile = { type = motorized_equipment_1 amount = 1600 }
		add_equipment_to_stockpile = { type = artillery_equipment_1 amount = 814 }
		add_equipment_to_stockpile = { type = light_tank_chassis_1 amount = 1300 producer = SOV variant_name = "T-26TU mod. 1933" }
		add_equipment_to_stockpile = { type = light_tank_chassis_1 amount = 1000 producer = SOV variant_name = "BT-5" }
		add_equipment_to_stockpile = { type = train_equipment_1 amount = 300 }
	}
	MAN = {
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 3900 }
	}
	BRA = {
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 2900 }
		add_equipment_to_stockpile = { type = support_equipment_1 amount = 75 }
	}
	MEX = {
		add_equipment_to_stockpile = { type = infantry_equipment_0 amount = 5605 }
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 900 }
		add_equipment_to_stockpile = { type = artillery_equipment_1 amount = 55 }
	}
	CAN = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 2700 }
	}
	RAJ = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 3600 }
	}
	AST = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 2300 }
	}
	NZL = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 700 }
	}
	SAF = {
		add_equipment_to_stockpile = { type = infantry_equipment_1 amount = 815 }
	}	
	SIA = {
		give_resource_rights = { receiver = GER state = 724 }
	}
}
JFU_pre_grinded_generals_OFF = {
	GER = { 
		recruit_character = GER_erwin_rommel
		recruit_character = GER_fedor_von_bock
		recruit_character = GER_erich_von_manstein
		recruit_character = GER_erwin_von_witzleben
		recruit_character = GER_gerd_von_rundstedt
	}
	SOV = {
		recruit_character = SOV_nikolay_vatutin
		recruit_character = SOV_georgy_zhukov
		recruit_character = SOV_vasily_chuykov
		recruit_character = SOV_andrey_grechko
		recruit_character = SOV_dmitry_lelyushenko
		SOV_georgy_zhukov = { 
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_vasily_chuykov = {
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_dmitry_lelyushenko = {
			set_character_flag = SOV_safe_from_purge_flag
		}	
		SOV_andrey_grechko = {
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_nikolay_vatutin = {
			set_character_flag = SOV_safe_from_purge_flag
		}				
	}
	ROM = {
		recruit_character = ROM_gheorghe_avramescu
		recruit_character = ROM_ioan_mihail_racovita
		recruit_character = ROM_petre_dumitrescu
	}
	HUN = {
		recruit_character = HUN_geza_lakatos
		recruit_character = HUN_ivan_hindy
		recruit_character = HUN_karoly_beregfy
		recruit_character = HUN_lajos_veress
	}
	SPR = {
		recruit_character = SPR_antonio_cordon_garcia
		recruit_character = SPR_mohamed_meziane
		recruit_character = SPR_gonzalo_queipo_de_llano
	}
	BUL = {
		recruit_character = BUL_ivan_markov
		recruit_character = BUL_georgi_markov
	}
	JAP = {
		recruit_character = JAP_shizuichi_tanaka
		recruit_character = JAP_akira_muto
		recruit_character = JAP_shunroku_hata
		recruit_character = JAP_hisaichi_terauchi
		recruit_character = JAP_tomoyuki_yamashita
		recruit_character = JAP_kenkichi_ueda
	}
	FRA = {
		recruit_character = FRA_charles_huntziger
		recruit_character = FRA_maxime_weygand
		recruit_character = FRA_alphonse_juin
	}
	ENG = {
		recruit_character = ENG_bernard_montgomery
		recruit_character = ENG_claude_auchinleck
		recruit_character = ENG_alan_cunningham
		recruit_character = ENG_william_slim
	}
	AST = {
		recruit_character = AST_leslie_morshead
		recruit_character = AST_thomas_blamey
		recruit_character = AST_henry_wynter
		recruit_character = AST_alan_vasey
	}
	BRA = {
		recruit_character = BRA_eurico_gaspar_dutra
		recruit_character = BRA_mascarenhas_de_morais
	}
	CAN = {
		recruit_character = CAN_thomas_victor_anderson
		recruit_character = CAN_charles_foulkes
	}
	MEX = {
		recruit_character = MEX_gildardo_magana
		recruit_character = MEX_heliodoro_charis
	}
	NZL = {
		recruit_character = NZL_robert_row
		recruit_character = NZL_william_stevens
	}
	RAJ = {
		recruit_character = RAJ_frank_messervy
		recruit_character = RAJ_douglas_gracey
	}
	SAF = {
		recruit_character = SAF_george_edwin_brink
		recruit_character = SAF_guy_hallifax
	}
	USA = {
		recruit_character = USA_omar_bradley
		recruit_character = USA_dwight_d_eisenhower
		recruit_character = USA_geoffrey_keyes
		recruit_character = USA_lucian_truscott
		recruit_character = USA_george_s_patton
	}
}	
JFU_pre_grinded_generals_ON = {
	GER = { 
		recruit_character = GER_erwin_rommel_grinded 
		recruit_character = GER_fedor_von_bock_grinded
		recruit_character = GER_erich_von_manstein_grinded
		recruit_character = GER_erwin_von_witzleben_grinded
		recruit_character = GER_gerd_von_rundstedt_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	SOV = {
		recruit_character = SOV_nikolay_vatutin_grinded
		recruit_character = SOV_georgy_zhukov_grinded
		recruit_character = SOV_vasily_chuykov_grinded
		recruit_character = SOV_andrey_grechko_grinded
		recruit_character = SOV_dmitry_lelyushenko_grinded
		SOV_georgy_zhukov_grinded = { 
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_vasily_chuykov_grinded = {
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_dmitry_lelyushenko_grinded = {
			set_character_flag = SOV_safe_from_purge_flag
		}	
		SOV_andrey_grechko_grinded = {
			set_character_flag = SOV_safe_from_purge_flag
		}
		SOV_nikolay_vatutin_grinded = {
			set_character_flag = SOV_safe_from_purge_flag
		}	
		add_ideas = { pre_grinded_gens_volunteers }
	}
	FIN = {
		add_ideas = { pre_grinded_gens_volunteers }
	}
	ROM = {
		recruit_character = ROM_gheorghe_avramescu_grinded
		recruit_character = ROM_ioan_mihail_racovita_grinded
		recruit_character = ROM_petre_dumitrescu_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	HUN = {
		recruit_character = HUN_geza_lakatos_grinded
		recruit_character = HUN_ivan_hindy_grinded
		recruit_character = HUN_karoly_beregfy_grinded
		recruit_character = HUN_lajos_veress_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	SPR = {
		recruit_character = SPR_antonio_cordon_garcia_grinded
		recruit_character = SPA_francisco_franco_grinded
		recruit_character = SPR_mohamed_meziane_grinded
		recruit_character = SPR_gonzalo_queipo_de_llano_grinded
		add_ideas = { scw_pre_grinded_nerf }
	}
	ITA = {
		recruit_character = ITA_emilio_de_bono_grinded
		recruit_character = ITA_ugo_cavallero_grinded
		recruit_character = ITA_giovanni_messe_grinded
		recruit_character = ITA_ubaldo_soddu_grinded
		recruit_character = ITA_rodolfo_graziani_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	BUL = {
		recruit_character = BUL_ivan_markov_grinded
		recruit_character = BUL_georgi_markov_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	JAP = {
		recruit_character = JAP_shizuichi_tanaka_grinded
		recruit_character = JAP_akira_muto_grinded
		recruit_character = JAP_shunroku_hata_grinded
		recruit_character = JAP_hisaichi_terauchi_grinded
		recruit_character = JAP_tomoyuki_yamashita_grinded
		recruit_character = JAP_kenkichi_ueda_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	FRA = {
		recruit_character = FRA_charles_huntziger_grinded
		recruit_character = FRA_charles_de_gaulle_grinded
		recruit_character = FRA_maxime_weygand_grinded
		recruit_character = FRA_alphonse_juin_grinded
		add_ideas = { pre_grinded_gens_volunteers }
	}
	MAN = {
		add_ideas = { pre_grinded_gens_volunteers }
	}
	ENG = {
		recruit_character = ENG_bernard_montgomery_grinded
		recruit_character = ENG_claude_auchinleck_grinded
		recruit_character = ENG_alan_cunningham_grinded
		recruit_character = ENG_william_slim_grinded
	}
	AST = {
		recruit_character = AST_leslie_morshead_grinded
		recruit_character = AST_thomas_blamey_grinded
		recruit_character = AST_henry_wynter_grinded
		recruit_character = AST_alan_vasey_grinded
	}
	BRA = {
		recruit_character = BRA_eurico_gaspar_dutra_grinded
		recruit_character = BRA_mascarenhas_de_morais_grinded
	}
	CAN = {
		recruit_character = CAN_thomas_victor_anderson_grinded
		recruit_character = CAN_charles_foulkes_grinded
	}
	MEX = {
		recruit_character = MEX_gildardo_magana_grinded
		recruit_character = MEX_heliodoro_charis_grinded
	}
	NZL = {
		recruit_character = NZL_robert_row_grinded
		recruit_character = NZL_william_stevens_grinded
	}
	RAJ = {
		recruit_character = RAJ_frank_messervy_grinded
		recruit_character = RAJ_douglas_gracey_grinded
	}
	SAF = {
		recruit_character = SAF_george_edwin_brink_grinded
		recruit_character = SAF_guy_hallifax_grinded
	}
	USA = {
		recruit_character = USA_omar_bradley_grinded
		recruit_character = USA_dwight_d_eisenhower_grinded
		recruit_character = USA_geoffrey_keyes_grinded
		recruit_character = USA_lucian_truscott_grinded
		recruit_character = USA_george_s_patton_grinded
	}
}
JFU_alternative_gs = {
	USA = {
		add_dynamic_modifier = {
			modifier = pacific_states_USA
		}
	}
	JAP = {
		add_dynamic_modifier = {
			modifier = pacific_states_JAP
		}
	}
	64 = {
		add_extra_state_shared_building_slots = 5
		add_building_construction = {
			type = industrial_complex
			level = 5
			instant_build = yes
		}
	}
	282 = {
		add_extra_state_shared_building_slots = 5
		add_building_construction = {
			type = industrial_complex
			level = 5
			instant_build = yes
		}
	}
}
HMP_anti_building_exploit_effect = { #add to horst tool
	every_state = { limit = { ignore_aa_states = yes non_damaged_building_level  = { building = anti_air_building  level > 5 } } remove_building  = {  type = anti_air_building  level = 1 }  }  
	every_state = { limit = {  non_damaged_building_level  = { building = infrastructure  level > 5 } } remove_building  = {  type = infrastructure  level = 1 }  }  
}	
island_hopping_JAP = {
	set_variable = { PJ_05 = 0 }	
	set_variable = { PJ_15 = 0 }
	if = { limit = { any_country = {axis = yes controls_state = 629}} 	add_to_variable = {var = PJ_05 value = -0.02 } add_to_variable = { var = PJ_15 value = 0.05 } }
	if = { limit = { any_country = {axis = yes controls_state = 631}} add_to_variable = {	var = PJ_05 value = -0.02 } add_to_variable = { 	var = PJ_15 value = 0.05 } }
	if = { limit = { any_country = {axis = yes controls_state =632 }} add_to_variable = { var = PJ_05 value = -0.02 } add_to_variable = { var = PJ_15 value = 0.05 } }
	if = { limit = { NOT = { any_country = {axis = yes controls_state = 648}}} add_to_variable = {	var = PJ_05 value = 0.02 } add_to_variable = { var = PJ_15 value = -0.05 } }
	if = { limit = { NOT = { any_country = {axis = yes controls_state = 645}}} add_to_variable = {	var = PJ_05 value = 0.02 } add_to_variable = { var = PJ_15 value = -0.05 } }
	if = { limit = { NOT = { any_country = {axis = yes controls_state = 526}}} add_to_variable = {	var = PJ_05 value = 0.02 } add_to_variable = { var = PJ_15 value = -0.05 } }
}
island_hopping_USA = {
	set_variable = { PJU_05 = 0}	
	set_variable = { PJU_15 = 0}
	if = { limit = { any_country = {allies = yes controls_state = 648}} add_to_variable = {	var = PJU_05 value = -0.02 } add_to_variable = { var = PJU_15 value = 0.05 } }
	if = { limit = { any_country = {allies = yes controls_state = 645}} add_to_variable = {	var = PJU_05 value = -0.02 } add_to_variable = { var = PJU_15 value = 0.05 } }
	if = { limit = { any_country = {allies = yes controls_state = 526}} add_to_variable = {	var = PJU_05 value = -0.02 } add_to_variable = { var = PJU_15 value = 0.05 } }
	if = { limit = { NOT = { any_country = {allies = yes controls_state = 629}}} add_to_variable = {	var = PJU_05 value = 0.02 } add_to_variable = { var = PJU_15 value = -0.05 } }
	if = { limit = { NOT = { any_country = {allies = yes controls_state = 631}}} add_to_variable = {	var = PJU_05 value = 0.02 } add_to_variable = { var = PJU_15 value = -0.05 } }
	if = { limit = { NOT = { any_country = {allies = yes controls_state = 632}}} add_to_variable = {	var = PJU_05 value = 0.02 } add_to_variable = { var = PJU_15 value = -0.05 } }
}
ETH_escalate_the_war_effect = {
	custom_effect_tooltip = ETH_war_escalation_inc_tt
	add_to_variable = { ETH.ETH_war_escalation_level = 1 }
}

ETH_deescalate_the_war_effect = {
	custom_effect_tooltip = ITA_war_deescalation_inc_tt #Change or use scripted loc if ETH ever has effects to de-escalate
	subtract_from_variable = { ETH.ETH_war_escalation_level = 1 }
}

ETH_electrify_state_remove_effect = {
	clr_country_flag = ETH_investments_in_progress_flag
	FROM = {
		clr_state_flag = ETH_can_electrify_state_flag
		set_state_flag = ETH_state_is_electrified_flag #State has already been electrified (either by ETH or by ITA)
	}
	custom_effect_tooltip = ETH_electrify_state_tt
	FROM = {
		add_to_variable = { ETH_state_development_production_speed = 0.1 }
			add_to_variable = { ETH_state_development_local_building_slots_factor = 0.1 }
	}
	IF = {
		limit = { 
			FROM = {
				check_variable = { ETH_state_development_production_speed < -0.1 } 
			}
		}
		FROM = { set_state_flag = ETH_can_improve_communication_state_flag }
	}
	IF = {
		limit = { 
			FROM = {
				check_variable = { ETH_state_development_local_building_slots_factor < -0.1 } 
			}
		}
		FROM = { set_state_flag = ETH_can_invest_local_industry_state_flag }
	}
}
remove_worker_shortage_effect = {	
	if = {
		limit = { has_idea = FRA_worker_shortage }
		remove_ideas = FRA_worker_shortage
	}
	else_if = {
		limit = { has_idea = FRA_full_employment }
		remove_ideas = FRA_full_employment
	}
}
JAP_interservice_rivalry_towards_army = {
	
	if = {
		limit = {  has_idea = JAP_interservice_rivalry_army_strengthened }
		swap_ideas = {
			remove_idea = JAP_interservice_rivalry_army_strengthened
			add_idea = JAP_interservice_rivalry_army_dominant
		}
	}

	if = {
		limit = { has_idea = JAP_interservice_rivalry_balanced }
		swap_ideas = {
			remove_idea = JAP_interservice_rivalry_balanced
			add_idea = JAP_interservice_rivalry_army_strengthened
		}
	}

	if = {
		limit = { has_idea = JAP_interservice_rivalry_navy_strengthened }
		swap_ideas = {
			remove_idea = JAP_interservice_rivalry_navy_strengthened
			add_idea = JAP_interservice_rivalry_balanced
		}
	}

	if = {
		limit = { has_idea = JAP_interservice_rivalry_navy_dominant }
		swap_ideas = {
			remove_idea = JAP_interservice_rivalry_navy_dominant
			add_idea = JAP_interservice_rivalry_navy_strengthened
		}
	}

}

JAP_interservice_rivalry_towards_navy = {

	if = {
		limit = { has_idea = JAP_interservice_rivalry_navy_strengthened }
		swap_ideas = {
			remove_idea = JAP_interservice_rivalry_navy_strengthened
			add_idea = JAP_interservice_rivalry_navy_dominant
		}
	}	
	if = {
		limit = { has_idea = JAP_interservice_rivalry_balanced }
		swap_ideas = {
			remove_idea = JAP_interservice_rivalry_balanced
			add_idea = JAP_interservice_rivalry_navy_strengthened
		}
	}
	if = {
		limit = { has_idea = JAP_interservice_rivalry_army_strengthened }
		swap_ideas = {
			remove_idea = JAP_interservice_rivalry_army_strengthened
			add_idea = JAP_interservice_rivalry_balanced
		}
	}
	if = {
		limit = { has_idea = JAP_interservice_rivalry_army_dominant }
		swap_ideas = {
			remove_idea = JAP_interservice_rivalry_army_dominant
			add_idea = JAP_interservice_rivalry_army_strengthened
		}
	}
	
	
	
}

JAP_intervene_in_china_level_down = {

	if = {
		limit = { has_idea = JAP_intervene_in_china_1 }
		remove_ideas = JAP_intervene_in_china_1
	}
	
	if = {
		limit = { has_idea = JAP_intervene_in_china_2 }
		swap_ideas = {
			remove_idea = JAP_intervene_in_china_2
			add_idea = JAP_intervene_in_china_1
		}
	}
	
	if = {
		limit = { has_idea = JAP_intervene_in_china_3 }
		swap_ideas = {
			remove_idea = JAP_intervene_in_china_3
			add_idea = JAP_intervene_in_china_2
		}
	}
	
	if = {
		limit = { has_idea = JAP_intervene_in_china_4 }
		swap_ideas = {
			remove_idea = JAP_intervene_in_china_4
			add_idea = JAP_intervene_in_china_3
		}
	}

	if = {
		limit = { has_idea = JAP_intervene_in_china_5 }
		swap_ideas = {
			remove_idea = JAP_intervene_in_china_5
			add_idea = JAP_intervene_in_china_4
		}
	}
}

JAP_intervene_in_china_remove = {

	if = {
		limit = { has_idea = JAP_intervene_in_china_5 }
		remove_ideas = JAP_intervene_in_china_5
	}
	
	if = {
		limit = { has_idea = JAP_intervene_in_china_4 }
		remove_ideas = JAP_intervene_in_china_4
	}
	
	if = {
		limit = { has_idea = JAP_intervene_in_china_3 }
		remove_ideas = JAP_intervene_in_china_3
	}
	
	if = {
		limit = { has_idea = JAP_intervene_in_china_2 }
		remove_ideas = JAP_intervene_in_china_2
	}
	else = {		
		remove_ideas = JAP_intervene_in_china_1
	}	
}
MAN_low_legitimacy_clear_all = {
	if = {
		limit = { has_idea = MAN_low_legitimacy_1 }
		remove_ideas = MAN_low_legitimacy_1
	}
	else_if = {
		limit = { has_idea = MAN_low_legitimacy_2 }
		remove_ideas = MAN_low_legitimacy_2
	}
	else_if = {
		limit = { has_idea = MAN_low_legitimacy_3 }
		remove_ideas = MAN_low_legitimacy_3
	}
	else_if = {
		limit = { has_idea = MAN_low_legitimacy_4 }
		remove_ideas = MAN_low_legitimacy_4
	}
	else_if = {
		limit = { has_idea = MAN_low_legitimacy_5 }
		remove_ideas = MAN_low_legitimacy_5
	}
}

#Important to put LOWEST first
MAN_low_legitimacy_level_down = {
	if = {
		limit = { has_idea = MAN_low_legitimacy_1 }
		#Makes the tooltip clearer if player looks at the effect early in the game
		effect_tooltip = {
			swap_ideas = {
				remove_idea = MAN_low_legitimacy_2
				add_idea = MAN_low_legitimacy_1
			}
		}
		hidden_effect = { remove_ideas = MAN_low_legitimacy_1 }
	}
	if = {
		limit = { has_idea = MAN_low_legitimacy_2 }
		swap_ideas = {
			remove_idea = MAN_low_legitimacy_2
			add_idea = MAN_low_legitimacy_1
		}
	}
	if = {
		limit = { has_idea = MAN_low_legitimacy_3 }
		swap_ideas = {
			remove_idea = MAN_low_legitimacy_3
			add_idea = MAN_low_legitimacy_2
		}
	}
	if = {
		limit = { has_idea = MAN_low_legitimacy_4 }
		swap_ideas = {
			remove_idea = MAN_low_legitimacy_4
			add_idea = MAN_low_legitimacy_3
		}
	}
	if = {
		limit = { has_idea = MAN_low_legitimacy_5 }
		swap_ideas = {
			remove_idea = MAN_low_legitimacy_5
			add_idea = MAN_low_legitimacy_4
		}
	}
}
MEX_increase_church_power = {
	if = {
		limit = { has_idea = MEX_church_power_5 }
		add_political_power = 25
	}
	else_if = {
		limit = { has_idea = MEX_church_power_4 }
		swap_ideas = {
			remove_idea = MEX_church_power_4
			add_idea = MEX_church_power_5
		}
	}
	else_if = {
		limit = { has_idea = MEX_church_power_3 }
		swap_ideas = {
			remove_idea = MEX_church_power_3
			add_idea = MEX_church_power_4
		}
	}
	else_if = {
		limit = { has_idea = MEX_church_power_2 }
		swap_ideas = {
			remove_idea = MEX_church_power_2
			add_idea = MEX_church_power_3
		}		
	}
	else_if = {
		limit = { has_idea = MEX_church_power_1 }
		swap_ideas = {
			remove_idea = MEX_church_power_1
			add_idea = MEX_church_power_2
		}
	}
}

MEX_decrease_church_power = {
	if = {
		limit = { has_idea = MEX_church_power_1 }
		add_political_power = 25
	}
	else_if = {
		limit = { has_idea = MEX_church_power_2 }
		swap_ideas = {
			remove_idea = MEX_church_power_2
			add_idea = MEX_church_power_1
		}
	}
	else_if = {
		limit = { has_idea = MEX_church_power_3 }
		swap_ideas = {
			remove_idea = MEX_church_power_3
			add_idea = MEX_church_power_2
		}
	}
	else_if = {
		limit = { has_idea = MEX_church_power_4 }
		swap_ideas = {
			remove_idea = MEX_church_power_4
			add_idea = MEX_church_power_3
		}		
	}
	else_if = {
		limit = { has_idea = MEX_church_power_5 }
		swap_ideas = {
			remove_idea = MEX_church_power_5
			add_idea = MEX_church_power_4
		}
	}
}

MEX_remove_church_power = {
	if = {
		limit = {
			has_idea = MEX_church_power_1
		}
		remove_ideas = MEX_church_power_1
	}
	else_if = {
		limit = {
			has_idea = MEX_church_power_2
		}
		remove_ideas = MEX_church_power_2
	}
	else_if = {
		limit = {
			has_idea = MEX_church_power_4
		}
		remove_ideas = MEX_church_power_4
	}
	else_if = {
		limit = {
			has_idea = MEX_church_power_5
		}
		remove_ideas = MEX_church_power_5
	}
	else_if = {
		limit = {
			always = yes
		}
		remove_ideas = MEX_church_power_4
	}
}

MEX_remove_cedillo_tension = {
	if = {
		limit = {
			has_idea = MEX_cedillo_tension_4
		}
		remove_ideas = MEX_cedillo_tension_4
	}
	else_if = {
		limit = {
			has_idea = MEX_cedillo_tension_3
		}
		remove_ideas = MEX_cedillo_tension_3
	}
	else_if = {
		limit = {
			has_idea = MEX_cedillo_tension_2
		}
		remove_ideas = MEX_cedillo_tension_2
	}
	else_if = {
		limit = {
			always = yes
		}
		remove_ideas = MEX_cedillo_tension
	}
}

MEX_decrease_cedillo_tension = {
	if = {
		limit = {
			has_idea = MEX_cedillo_tension_2
		}
		swap_ideas = {
			remove_idea = MEX_cedillo_tension_2
			add_idea = MEX_cedillo_tension
		}
	}
	else_if = {
		limit = {
			has_idea = MEX_cedillo_tension_3
		}
		swap_ideas = {
			remove_idea = MEX_cedillo_tension_3
			add_idea = MEX_cedillo_tension_2
		}
	}
	else_if = {
		limit = {
			has_idea = MEX_cedillo_tension_4
		}
		swap_ideas = {
			remove_idea = MEX_cedillo_tension_4
			add_idea = MEX_cedillo_tension_3
		}
	}
}

MEX_increase_cedillo_tension = {
	if = {
		limit = {
			has_idea = MEX_cedillo_tension_3
		}
		swap_ideas = {
			remove_idea = MEX_cedillo_tension_3
			add_idea = MEX_cedillo_tension_4
		}
	}
	else_if = {
		limit = {
			has_idea = MEX_cedillo_tension_2
		}
		swap_ideas = {
			remove_idea = MEX_cedillo_tension_2
			add_idea = MEX_cedillo_tension_3
		}
	}
	else_if = {
		limit = {
			has_idea = MEX_cedillo_tension
		}
		swap_ideas = {
			remove_idea = MEX_cedillo_tension
			add_idea = MEX_cedillo_tension_2
		}
	}
}
update_operation_ai = {
	# old target is no longer relevant
	if = {
		limit = {
			NOT = { check_variable = { generic_operation_target = 0 } }
			var:generic_operation_target = {
				OR = {
					exists = no
					has_capitulated = yes
					is_ally_with = PREV
				}
			}
		}
		set_variable = { generic_operation_target = 0 }
	}


	# pick an operation target
	get_highest_scored_country = {
		scorer = ai_generic_operation_target_scorer
		var = generic_operation_target
	}
	
	# this variable will be our limiting factor for actually doing operations
	
	# check if we have any operatives that are captured
	# find the captor so they can be rescued
	set_temp_variable = { captor = 0 }
	
	every_operative = {
		limit = { is_operative_captured = yes }
		add_to_temp_variable = { min_needed_operative_for_operations = 1 }
		if = {
			limit = { check_variable = { captor = 0 } }
			set_temp_variable = { captor = operative_captor }
		}
	}
	set_variable = { rescue_operative_from = 0 }
	if = {
		limit = { NOT = { check_variable = { captor = 0 } } }
		set_variable = { rescue_operative_from = captor } # used in ai strat generic_operation_ai_rescue
		add_to_temp_variable = { min_needed_operative_for_operations = 2 }
	}
	
	
	# if we have too few of operatives clear operative target
	set_temp_variable = { t = min_needed_operative_for_operations }
	subtract_from_temp_variable = { t = 2 }
	if = {
		limit = { num_of_operatives < t }
		set_variable = { generic_operation_target = 0 }
	}
	
	if = {
		# if found a target pick an operation
		limit = { 
			NOT = { check_variable = { generic_operation_target = 0 } }
			# if we are already preparing for current one no need to recalc
			OR = {
				check_variable = { generic_operation_type_to_run = 0 }
				NOT = { 
					is_preparing_operation = {
						target = var:generic_operation_target
						operation = var:generic_operation_type_to_run
					}
				}
			}
		}
		
		if = {
			limit = { 
				num_of_operatives > min_needed_operative_for_operations
			}
			
			# these two arrays are filled with operation tokens and corresponding score
			clear_temp_array = operation_types
			clear_temp_array = operation_types_scores
			
			# civilian infiltration
			set_temp_variable = { score = 100 }
			add_to_temp_array = { operation_types = token:operation_infiltrate_civilian }
			add_to_temp_array = { operation_types_scores = score }
			
			# army infiltration
			set_temp_variable = { score = 50 }
			add_to_temp_variable = { score = num_armies }
			clamp_temp_variable = { var = score max = 180 }
			add_to_temp_array = { operation_types = token:operation_infiltrate_armed_forces_army }
			add_to_temp_array = { operation_types_scores = score }
			
			# air infiltration
			set_temp_variable = { score = 50 }
			add_to_temp_variable = { t = num_deployed_planes }
			divide_temp_variable = { t = 10 }
			add_to_temp_variable = { score = t }
			clamp_temp_variable = { var = score max = 180 }
			add_to_temp_array = { operation_types = token:operation_infiltrate_armed_forces_airforce }
			add_to_temp_array = { operation_types_scores = score }
			
			# navy infiltration
			var:generic_operation_target = {
				if = {
					limit = { 
						has_navy_size = { size > 0 } 
						PREV = {
							has_navy_size = { size > 0 } 
						}
					}
					set_temp_variable = { score = num_ships }
					
					set_temp_variable = { t = num_ships_with_type@carrier }
					multiply_temp_variable = { t = 20 }
					add_to_temp_variable = { score = t }
					
					set_temp_variable = { t = num_ships_with_type@capital }
					multiply_temp_variable = { t = 10 }
					add_to_temp_variable = { score = t }
					
					clamp_temp_variable = { var = score max = 180 }
					
					add_to_temp_array = { operation_types = token:operation_infiltrate_armed_forces_navy }
					add_to_temp_array = { operation_types_scores = score }
				}
			}
			
			for_each_loop = {
				array = operation_types
				
				# randomization by half
				set_temp_variable = { t = random }
				multiply_temp_variable = { t = 0.5 }
				add_to_temp_variable = { t = 0.5 }
				multiply_temp_variable = { operation_types_scores^i = t }
				
				if = {
					limit = {
						num_finished_operations = {
							target = var:generic_operation_target
							operation = var:v
							value > 0
						}
						
						# lower score if we have a finished operation
						multiply_temp_variable = { operation_types_scores^i = 0.5 }
								
						# cancel if more than 1 is executed
						if = {
							limit = {
								num_finished_operations = {
									target = var:generic_operation_target
									operation = var:v
									value > 1
								}
								
								set_temp_variable = { operation_types_scores^i = -1 }
							}
						}
					}
				}
			}
			
			# highest score will be selected
			find_highest_in_array = {
				array = operation_types_scores
			}
			if = {
				limit = { check_variable = { v > 0 } }
				set_variable = { generic_operation_type_to_run = operation_types^i } # used in ai strat generic_operation_ai
			}
		}
		else =
		{
			set_variable = { generic_operation_type_to_run = 0 }
		}
	}
}
#Add to scripted triggers if more levels of hyper inflation is added
USA_depression_clear_all = {
	remove_ideas = {
		great_depression
		great_depression_2
		great_depression_3
	}
}

#Important to put HIGHEST first
USA_great_depression_level_up = {
	# level 5 not relevant. Cannot go above.
	custom_effect_tooltip = USA_great_depression_up_tt
	if = {
		limit = { has_idea = great_depression_2 }
		swap_ideas = {
			remove_idea = great_depression_2
			add_idea = great_depression
		}
	}
	else_if = {
		limit = { has_idea = great_depression_3 }
		swap_ideas = {
			remove_idea = great_depression_3
			add_idea = great_depression_2
		}
	}
	
}

#Important to put LOWEST first
USA_great_depression_level_down = {
	if = {
		limit = { has_idea = great_depression_3 }
		custom_effect_tooltip = USA_great_depression_down_tt
		remove_ideas = great_depression_3
	}
	if = {
		limit = { has_idea = great_depression_2 }
		custom_effect_tooltip = USA_great_depression_down_tt
		swap_ideas = {
			remove_idea = great_depression_2
			add_idea = great_depression_3
		}
	}
	if = {
		limit = { has_idea = great_depression }
		custom_effect_tooltip = USA_great_depression_down_tt
		swap_ideas = {
			remove_idea = great_depression
			add_idea = great_depression_2
		}
	}
}

USA_congress_get_quorum = {
	set_variable = { var = quorum_low value = senators_total }
	multiply_variable = { var = quorum_low value = 0.4 }
	set_variable = { var = quorum_medium value = senators_total }
	multiply_variable = { var = quorum_medium value = 0.5 }
	set_variable = { var = quorum_high value = senators_total }
	multiply_variable = { var = quorum_high value = 0.6 }
	round_variable = quorum_low 
	round_variable = quorum_medium 
	round_variable = quorum_high
	USA_recalc_congress_icon_frames = yes
}
USA_congress_remove_state = {
	custom_effect_tooltip = mtg_usa_congress_remove_state_tt
	subtract_from_variable = { senators_total = 2 }
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_congress_get_quorum = yes
	USA_recalc_congress_icon_frames = yes
}
USA_congress_add_state = {
	custom_effect_tooltip = mtg_usa_congress_add_state_tt
	add_to_variable = { senators_total = 2 }
	add_to_variable = { senators_support = 2 }
	USA_congress_get_quorum = yes
	USA_recalc_congress_icon_frames = yes
}
USA_congress_small_opposition = {
	custom_effect_tooltip = mtg_usa_congress_small_opposition_tt
	hidden_effect = {
		USA_senate_small_opposition = yes
		USA_house_small_opposition = yes
		
	}
}

USA_senate_small_opposition = {
	custom_effect_tooltip = mtg_usa_senate_small_opposition_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = -4 }
	add_to_variable = { senators_support = temp_factor }
	round_variable = senators_support
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}

USA_house_small_opposition = {
	custom_effect_tooltip = mtg_usa_house_small_opposition_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = -20 }
	add_to_variable = { representatives_support = temp_factor }
	round_variable = representatives_support
	clamp_variable = { var = representatives_support max = representatives_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}
USA_senate_small_support = {
	custom_effect_tooltip = mtg_usa_senate_small_support_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = 5 }
	add_to_variable = { senators_support = temp_factor }
	round_variable = senators_support
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}

USA_house_small_support = {
	custom_effect_tooltip = mtg_usa_house_small_support_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = 25 }
	clamp_temp_variable = { var = temp_factor max = 25 min = 10 }
	add_to_variable = { representatives_support = temp_factor }
	round_variable = representatives_support
	clamp_variable = { var = representatives_support max = representatives_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}

USA_senate_medium_opposition = {
	custom_effect_tooltip = mtg_usa_senate_medium_opposition_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = -8 }
	clamp_temp_variable = { var = temp_factor max = -3 min = -8 }
	add_to_variable = { senators_support = temp_factor }
	round_variable = senators_support
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}

USA_house_medium_opposition = {
	custom_effect_tooltip = mtg_usa_house_medium_opposition_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = -40 }
	clamp_temp_variable = { var = temp_factor max = -20 min = -40 }
	add_to_variable = { representatives_support = temp_factor }
	round_variable = representatives_support
	clamp_variable = { var = representatives_support max = representatives_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}
USA_senate_medium_support = {
	custom_effect_tooltip = mtg_usa_senate_medium_support_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = 10 }
	clamp_temp_variable = { var = temp_factor max = 10 min = 5 }
	add_to_variable = { senators_support = temp_factor }
	round_variable = senators_support
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}

USA_house_medium_support = {
	custom_effect_tooltip = mtg_usa_house_medium_support_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = 50 }
	clamp_temp_variable = { var = temp_factor max = 50 min = 20 }
	add_to_variable = { representatives_support = temp_factor }
	round_variable = representatives_support
	clamp_variable = { var = representatives_support max = representatives_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}
USA_senate_large_opposition = {
	custom_effect_tooltip = mtg_usa_senate_large_opposition_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = -25 }
	clamp_temp_variable = { var = temp_factor max = 25 min = -10 }
	add_to_variable = { senators_support = temp_factor }
	round_variable = senators_support
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}

USA_house_large_opposition = {
	custom_effect_tooltip = mtg_usa_house_large_opposition_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = -100 }
	clamp_temp_variable = { var = temp_factor max = -50 min = -100 }
	add_to_variable = { representatives_support = temp_factor }
	round_variable = representatives_support
	clamp_variable = { var = representatives_support max = representatives_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}
USA_senate_large_support = {
	custom_effect_tooltip = mtg_usa_senate_large_support_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = 30 }
	clamp_temp_variable = { var = temp_factor max = 30 min = 15 }
	add_to_variable = { senators_support = temp_factor }
	round_variable = senators_support
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}

USA_house_large_support = {
	custom_effect_tooltip = mtg_usa_house_large_support_tt
	set_temp_variable = { temp_factor = random }
	multiply_temp_variable = { temp_factor = 125 }
	clamp_temp_variable = { var = temp_factor max = 125 min = 80 }
	add_to_variable = { representatives_support = temp_factor }
	round_variable = representatives_support
	clamp_variable = { var = representatives_support max = representatives_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}
USA_congress_medium_opposition = {
	custom_effect_tooltip = mtg_usa_congress_medium_opposition_tt
	hidden_effect = {
		USA_senate_medium_opposition = yes
		USA_house_medium_opposition = yes
		
	}
}

USA_congress_large_opposition = {
	custom_effect_tooltip = mtg_usa_congress_large_opposition_tt
	hidden_effect = {
		USA_senate_large_opposition = yes
		USA_house_large_opposition = yes
		
	}
}
USA_congress_small_support = {
	custom_effect_tooltip = mtg_usa_congress_small_support_tt
	hidden_effect = {
		USA_senate_small_support = yes
		USA_house_small_support = yes
		
	}
}

USA_congress_medium_support = {
	custom_effect_tooltip = mtg_usa_congress_medium_support_tt
	hidden_effect = {
		USA_senate_medium_support = yes
		USA_house_medium_support = yes
		
	}
}
USA_congress_large_support = {
	custom_effect_tooltip = mtg_usa_congress_large_support_tt
	hidden_effect = {
		USA_senate_large_support = yes
		USA_house_large_support = yes
		
	}
}
USA_election_senate = {
	set_variable = { var = senators_for_reelection value = senators_total } #not temp because needed for events
	multiply_variable = { senators_for_reelection = 0.3 }
	multiply_variable = { senators_for_reelection = election_factor }
	add_to_variable = { senators_support = senators_for_reelection }
	round_variable = senators_support
	round_variable = senators_for_reelection
	set_variable = { sen_loc = senators_for_reelection }
	if = {
		limit = {
			check_variable = { sen_loc < 0 }
		}
		multiply_variable = { sen_loc = -1 }
	}
	clamp_variable = { var = senators_support max = senators_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}
USA_election_house = {
	set_variable = { var = representatives_for_reelection value = representatives_total } #not temp because needed for events
	multiply_variable = { representatives_for_reelection = 0.5 }
	multiply_variable = { representatives_for_reelection = election_factor }
	set_variable = { representatives_support = representatives_total }
	multiply_variable = { representatives_support = 0.5 }
	add_to_variable = { representatives_support = representatives_for_reelection }
	round_variable = representatives_support
	round_variable = representatives_for_reelection
	set_variable = { ror_loc = representatives_for_reelection }
	if = {
		limit = {
			check_variable = { ror_loc < 0 }
		}
		multiply_variable = { ror_loc = -1 }
	}
	clamp_variable = { var = senators_support max = representatives_total min = 0 }
	USA_recalc_congress_icon_frames = yes
}
USA_recalc_congress_icon_frames = {
	
	set_temp_variable = { senators_temp = senators_support }
	divide_temp_variable = { senators_temp = senators_total }
	multiply_temp_variable = { senators_temp = 21 }
	if = {
		limit = { check_variable = { senators_temp > 0 } }
		clamp_temp_variable = {
			var = senators_temp
			min = 1
			max = 21
		}
	}
	else = {
		set_temp_variable = { senators_temp = 1 }
	}
	set_variable = { current_senate_icon_frame = senators_temp }

	set_temp_variable = { house_temp = representatives_support }
	divide_temp_variable = { house_temp = representatives_total }
	multiply_temp_variable = { house_temp = 21 }
	if = {
		limit = { check_variable = { house_temp > 0 } }
		clamp_temp_variable = {
			var = house_temp
			min = 1
			max = 21
		}
	}
	else = {
		set_temp_variable = { house_temp = 1 }		
	}
	set_variable = { current_house_icon_frame = house_temp }
}
USA_calc_stars = {
	if = {
		limit = {
			has_cosmetic_tag = USA_50
		}
		set_cosmetic_tag = USA_51
	}
	else_if = {
		limit = {
			has_cosmetic_tag = USA_49
		}
		set_cosmetic_tag = USA_50
	}
	else = {
		set_cosmetic_tag = USA_49
	}
}
# Reduce De Crisisjaren
HOL_de_crisisjaren_level_down = {
	if = {
		limit = {
			has_idea = HOL_de_crisisjaren_1
		}
		remove_ideas = HOL_de_crisisjaren_1
	}
	else_if = {
		limit = {
			has_idea = HOL_de_crisisjaren_2
		}
		swap_ideas = {
			remove_idea = HOL_de_crisisjaren_2
			add_idea = HOL_de_crisisjaren_1
		}
	}
	else_if = {
		limit = {
			has_idea = HOL_de_crisisjaren_3
		}
		swap_ideas = {
			remove_idea = HOL_de_crisisjaren_3
			add_idea = HOL_de_crisisjaren_2
		}
	}
	else_if = {
		limit = {
			has_idea = HOL_de_crisisjaren_4
		}
		swap_ideas = {
			remove_idea = HOL_de_crisisjaren_4
			add_idea = HOL_de_crisisjaren_3
		}
	}
	else_if = {
		limit = {
			has_idea = HOL_de_crisisjaren_5
		}
		swap_ideas = {
			remove_idea = HOL_de_crisisjaren_5
			add_idea = HOL_de_crisisjaren_4
		}
	}
}
#Important to put HIGHEST first
GER_mefo_bills_level_up = {
	if = {
		limit = { has_idea = GER_mefo_bills_17 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_17
			add_idea = GER_mefo_bills_18
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_16 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_16
			add_idea = GER_mefo_bills_17
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_15 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_15
			add_idea = GER_mefo_bills_16
		}		
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_14 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_14
			add_idea = GER_mefo_bills_15
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_13 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_13
			add_idea = GER_mefo_bills_14
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_12 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_12
			add_idea = GER_mefo_bills_13
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_11 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_11
			add_idea = GER_mefo_bills_12
		}		
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_10 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_10
			add_idea = GER_mefo_bills_11
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_9 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_9
			add_idea = GER_mefo_bills_10
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_8 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_8
			add_idea = GER_mefo_bills_9
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_7 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_7
			add_idea = GER_mefo_bills_8
		}		
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_6 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_6
			add_idea = GER_mefo_bills_7
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_5 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_5
			add_idea = GER_mefo_bills_6
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_4 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_4
			add_idea = GER_mefo_bills_5
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_3 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_3
			add_idea = GER_mefo_bills_4
		}		
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_2 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_2
			add_idea = GER_mefo_bills_3
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_1 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_1
			add_idea = GER_mefo_bills_2
		}
	}
}

#Important to put HIGHEST first
GER_remove_mefo_bills = {
	if = {
		limit = { has_idea = GER_mefo_bills_1 }
		remove_ideas = GER_mefo_bills_1
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_2 }
		remove_ideas = GER_mefo_bills_2
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_3 }
		remove_ideas = GER_mefo_bills_3
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_4 }
		remove_ideas = GER_mefo_bills_4
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_5 }
		remove_ideas = GER_mefo_bills_5
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_6 }
		remove_ideas = GER_mefo_bills_6
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_7 }
		remove_ideas = GER_mefo_bills_7
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_8 }
		remove_ideas = GER_mefo_bills_8
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_9 }
		remove_ideas = GER_mefo_bills_9
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_10 }
		remove_ideas = GER_mefo_bills_10
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_11 }
		remove_ideas = GER_mefo_bills_11
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_12 }
		remove_ideas = GER_mefo_bills_12
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_13 }
		remove_ideas = GER_mefo_bills_13
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_14 }
		remove_ideas = GER_mefo_bills_14
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_15 }
		remove_ideas = GER_mefo_bills_15
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_16 }
		remove_ideas = GER_mefo_bills_16
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_17 }
		remove_ideas = GER_mefo_bills_17
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_18 }
		remove_ideas = GER_mefo_bills_18
	}
}

# Like the level up effect except it runs in reverse
# For use when annexing the gold reserves of Austria, Czechoslovakia and Yugoslavia

GER_mefo_bills_level_down = {
	if = {
		limit = { has_idea = GER_mefo_bills_2 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_2
			add_idea = GER_mefo_bills_1
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_3 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_3
			add_idea = GER_mefo_bills_2
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_4 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_4
			add_idea = GER_mefo_bills_3
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_5 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_5
			add_idea = GER_mefo_bills_4
		}		
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_6 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_6
			add_idea = GER_mefo_bills_5
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_7 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_7
			add_idea = GER_mefo_bills_6
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_8 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_8
			add_idea = GER_mefo_bills_7
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_9 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_9
			add_idea = GER_mefo_bills_8
		}		
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_10 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_10
			add_idea = GER_mefo_bills_9
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_11 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_11
			add_idea = GER_mefo_bills_10
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_12 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_12
			add_idea = GER_mefo_bills_11
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_13 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_13
			add_idea = GER_mefo_bills_12
		}		
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_14 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_14
			add_idea = GER_mefo_bills_13
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_15 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_15
			add_idea = GER_mefo_bills_14
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_16 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_16
			add_idea = GER_mefo_bills_15
		}
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_17 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_17
			add_idea = GER_mefo_bills_16
		}		
	}
	else_if = {
		limit = { has_idea = GER_mefo_bills_18 }
		swap_ideas = {
			remove_idea = GER_mefo_bills_18
			add_idea = GER_mefo_bills_17
		}
	}
}

give_SOV_armor_research_bonuses = { #this effect is run for the Soviets!
	if = {
		limit = {
			NOT = {
				has_dlc = "No Step Back"
			}
		}
		add_tech_bonus = {
			name = med_armor_bonus
			ahead_reduction = 2
			category = cat_medium_armor
		}
		add_tech_bonus = {
			name = armor_bonus
			bonus = 1.0
			uses = 1
			category = armor
		}
	}
	if = { #double if because history files don't like else and this effect is run in the Soviet history file
		limit = {
			has_dlc = "No Step Back"
		}
		create_equipment_variant = {
			name = "A-20"
			type = medium_tank_chassis_1
			parent_version = 0
			modules = {
				main_armament_slot = tank_small_cannon_2
				turret_type_slot = tank_medium_two_man_tank_turret
				suspension_type_slot = tank_christie_suspension
				armor_type_slot = tank_welded_armor
				engine_type_slot = tank_diesel_engine
				special_type_slot_1 = sloped_armor
			}
			upgrades = {
				tank_nsb_engine_upgrade = 8
				tank_nsb_armor_upgrade = 2
			}
			icon = "gfx/interface/technologies/SOV_basic_main_tank.dds"
		}
		create_equipment_variant = {
			name = "KV-1"
			type = heavy_tank_chassis_1
			parent_version = 0
			modules = {
				main_armament_slot = tank_medium_cannon
				turret_type_slot = tank_heavy_three_man_tank_turret
				suspension_type_slot = tank_torsion_bar_suspension
				armor_type_slot = tank_welded_armor
				engine_type_slot = tank_diesel_engine		
			}
			upgrades = {
				tank_nsb_engine_upgrade = 10
				tank_nsb_armor_upgrade = 9
			}
			icon = "gfx/interface/technologies/SOV_imp_heavy_tank.dds"
		}
		add_tech_bonus = {
			name = armor_bonus
			bonus = 1.0
			uses = 2
			category = armor
		}
	}
}